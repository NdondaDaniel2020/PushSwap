void	send_max_to_the_top_of_b(t_data *data) /// revizar onde isoo esta sendo usado
{
	int		pos;
	int		size;
	t_size	max_min;
/// revizar onde isoo esta sendo usado
	size = ft_lstsize(data->stack_b);
	max_min = stack_max_and_min_value(data->stack_b);
	pos = get_pos_in_stack(max_min.max, data->stack_b);
	if (pos > (size / 2))
	{
		pos = size - pos;
		while (pos--)
			rrb(data, 1);
	}
	else if (pos <= (size / 2))
	{
		while (pos--)
			rb(data, 1);
	}
}

void	lstls(t_list *list) // remover
{
	int	i;

	i = 0;
	if (list)
	{
		ft_printf("Lista\n"); // remover
		while (list)
		{
			ft_printf("%i - %i\n", i, *(int *)list->content);
			list = list->next;
			i++;
		}
		ft_printf("\n");
	}
}
